stages:
  - Unit Tests
  - Staging Deploy
  - Integration Tests

# SQL Variables for the WordPress tests
variables:
  # Configure mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: wordpress_tests
  MYSQL_ROOT_PASSWORD: mysql

# Unit Test Stage

## PHP Unit Tests
PHP 7.3 Unit:
  stage: Unit Tests
  image: edbizarro/gitlab-ci-pipeline-php:7.3-alpine
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - composer test:unit

PHP 7.2 Unit:
  stage: Unit Tests
  image: edbizarro/gitlab-ci-pipeline-php:7.2-alpine
  script:
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - composer test:unit

## JavaScript Unit Tests
JS Unit Test:
  image: node:latest
  stage: Unit Tests
  script:
    - yarn
    - yarn build
    - yarn test:once

# Integration Test Stage
WP-Integration:
  image: tetraweb/php:7.1
  stage: Integration Tests
  services:
    - mysql:5.6
  script:
    - phpunit --configuration phpunit-integration.xml.dist
  before_script:
    # Install dependencies

    # update the docker
    - apt-get clean
    - apt-get -yqq update

    # install the required packages for the running CI tests
    - apt-get -yqqf install zip unzip subversion mysql-client libmysqlclient-dev --fix-missing

    # PHP extensions
    - docker-php-ext-enable mbstring mcrypt mysqli pdo_mysql intl gd zip bz2

    # Set up WordPress tests
    - bash bin/install-wp-tests.sh wordpress_tests root mysql mysql latest true

    # Install composer, then install with composer
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install --no-dev
    - php composer.phar global require "phpunit/phpunit:^6"

#Deploy current code to the wp-content/plugins/caldera-forms folder of the https://dev-caldera-testing.pantheonsite.io site installation
#Only triggered when a Tag is pushed
Deploy To Pantheon:
  stage: Staging Deploy
  environment:
    name: dev
    url: https://dev-$PANTHEON_SITE.pantheonsite.io/

  before_script:
    # Set SSH conf
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p $HOME/.ssh && echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
    # git config
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "Gitlab CI"

  script:
    # Create a DIR and clone Pantheon repo
    - mkdir .pantheon
    - cd .pantheon
    - git remote rm origin
    - git clone $GIT_PANTHEON_URL
    # Copy CF code into Pantheon repository
    - cd ../
    - if [ -d ".pantheon/repository/wp-content/plugins/caldera-forms" ]; then rm -Rf .pantheon/repository/wp-content/plugins/caldera-forms; fi
    - mkdir .pantheon/repository/wp-content/plugins/caldera-forms
    - cp -Rf * .pantheon/repository/wp-content/plugins/caldera-forms
    # Commit and push Pantheon repository
    - cd .pantheon/repository
    - git add .
    - git commit -m "$CI_COMMIT_MESSAGE $CI_COMMIT_TAG"
    - git push
  
  rules:
    - if: '$CI_COMMIT_TAG'

# Cypress Test Stage
# Only triggered when a Tag is pushed
Cypress Tests:
  image: cypress/base:10
  stage: Integration Tests

  before_script:
    - yarn
    - yarn add cypress --dev

  script:
    - yarn test:e2e:ci
  
  rules:
    - if: '$CI_COMMIT_TAG'